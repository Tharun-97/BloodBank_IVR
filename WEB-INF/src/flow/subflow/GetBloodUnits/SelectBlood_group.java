package flow.subflow.GetBloodUnits;

import java.util.Collection;
import java.util.List;

import org.util.ApiIntegration;

import com.avaya.sce.runtime.Prompt;
import com.avaya.sce.runtimecommon.SCESession;

/**
 * Class that represents a menu.  A menu can contain prompts, choices and links
 * as well as handlers for various events that may occur while the menu is executing
 * Last generated by Orchestration Designer at: 2023-JAN-23  12:54:30 PM
 */
public class SelectBlood_group extends com.avaya.sce.runtime.Menu {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2023-JAN-23  12:54:30 PM
	 */
	public SelectBlood_group() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		setNeedsDefaultDisconnectHandler(false);
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method is generated automatically and should not be manually edited.
	 * To manually edit the links for the node, override:
	 *     void updateLinks(Collection links, SCESession mySession)
	 * Last generated by Orchestration Designer at: 2023-FEB-10  05:54:13 PM
	 * @return a collection of links
	 */
	public java.util.Collection getLinks(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Link link;
		java.util.List list;
		java.util.Collection grammarInfo = null;
		java.util.Collection<com.avaya.sce.runtime.CaptureExpression> captureExpr = null;
		// This item does not have any defined links
		list = new java.util.ArrayList();
		String ___tempGrammarName = null;

		return(list);
	}
	/**
	 * This method is generated automatically and should not be manually edited.
	 * To manually edit the properties for the node, override:
	 *     void updateProperties(Collection properties, SCESession mySession)
	 * Last generated by Orchestration Designer at: 2023-FEB-10  05:54:13 PM
	 * @return a collection of properties
	 */
	public java.util.Collection getProperties(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Property property;
		java.util.List list;
		// This item does not have any defined properties
		list = new java.util.ArrayList();

		return(list);
	}
	/**
	 * This method is generated automatically and should not be manually edited.
	 * To manually edit the event handlers for the node, override:
	 *    void updateEvents(Collection events, SCESession mySession)
	 * Last generated by Orchestration Designer at: 2023-FEB-10  05:54:13 PM
	 * @return a collection of Events
	 */
	public java.util.Collection getEvents(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list;
		com.avaya.sce.runtime.Event event;
		list = new java.util.ArrayList(2);
		java.util.List eventPromptNames = null;
		String ___tempPromptName = null;

		// build the list of prompt names
		eventPromptNames = new java.util.ArrayList(1);
		
		eventPromptNames.add(new com.avaya.sce.runtime.PromptRefInfo("NoInput", ""));

		event = new com.avaya.sce.runtime.Event(com.avaya.sce.runtimecommon.SCERT.EVENT_NOINPUT, (com.avaya.sce.runtime.PromptRefInfo[])eventPromptNames.toArray(new com.avaya.sce.runtime.PromptRefInfo[0]), new com.avaya.sce.runtime.Goto("GetBloodUnits-exit", 3, true, ""));
		list.add(event);

		// build the list of prompt names
		eventPromptNames = new java.util.ArrayList(1);
		
		eventPromptNames.add(new com.avaya.sce.runtime.PromptRefInfo("NoMatch", ""));

		event = new com.avaya.sce.runtime.Event(com.avaya.sce.runtimecommon.SCERT.EVENT_NOMATCH, (com.avaya.sce.runtime.PromptRefInfo[])eventPromptNames.toArray(new com.avaya.sce.runtime.PromptRefInfo[0]), new com.avaya.sce.runtime.Goto("GetBloodUnits-exit", 3, true, ""));
		list.add(event);
		return(list);
	}
	/**
	 * Builds the list of choices for the menu.  This list is built
	 * automatically by the code generator and should not be edited
	 * manually.  Future code generation may overwrite any changes
	 * to this method.<br>
	 * To modify the list of choices, override:<br>
	 *    updateChoices(Collection choices, SCESession mySession)
	 * Last generated by Orchestration Designer at: 2023-FEB-10  05:54:13 PM
	 */
	public java.util.Collection getChoices(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Choice choice = null;
		java.util.Collection grammarInfo = null;
		list = new java.util.ArrayList(1);
		String ___tempGrammarName = null;

		// build the list of grammar information objects for the choice
		grammarInfo = new java.util.ArrayList();


		choice = new com.avaya.sce.runtime.Choice("Exit", "0", true, "exact", "GetBloodUnits-exit", grammarInfo, true);
		list.add(choice);

		return(list);
	}
	/**
	 * Builds the list of prompts that are used by this flow item<br>
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of prompts for the flow item, override:
	 *     updatePrompts(Collection prompts, SCESession mySession)
	 * @return list of prompts for the menu
	 * Last generated by Orchestration Designer at: 2023-FEB-10  05:54:13 PM
	 */
	public java.util.Collection getPrompts(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		String ___tempPromptName = null;
		// build the list of prompt names
		list = new java.util.ArrayList(1);
		
		list.add(new com.avaya.sce.runtime.PromptRefInfo("BloodGroupSelect", ""));

		return(list);
	}
	/**
	 * Builds the list of tracking items that are generated by this flow item<br>
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.
	 * @return list of tracking items for the item
	 * Last generated by Orchestration Designer at: 2023-FEB-10  05:54:13 PM
	 */
	public java.util.Collection getTrackingActions(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;

		// Item has no tracking items.
		list = new java.util.ArrayList();
		return(list);
	}
	List<String> bloodGrouplist=null;
	@Override
	public void requestBegin(SCESession mySession) {

		ApiIntegration api = new ApiIntegration(mySession);
	
		try {
			bloodGrouplist = api.ApiIntegrationList("http://172.16.11.88:8010/BloodBank/bloodGroups/listOfBloodGroups","bloodgroup");

		} catch (Exception e) {
			System.err.println(e.getMessage());
		}

	}
	@Override
	public void updatePrompts(Collection prompts, SCESession mySession) {
		super.updatePrompts(prompts, mySession);

		Prompt p = new Prompt() {
			@Override
			public void buildPrompt() {
			}
		};
		p.setSession(mySession);
		p.setOrder(com.avaya.sce.runtime.Prompt.STANDARD);
		p.setTimeout(1, 8000);
		p.setBargin(1, true);
		com.avaya.sce.runtime.Format format = null;
		p.add(1, new com.avaya.sce.runtime.PhraseVariableElement("AudioURLs:BloodGroupSelect",
				com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL, false));
		
		p.add(1, new com.avaya.sce.runtime.PhraseVariableElement("AudioURLs:A_positive",
				com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL, false));
		
		p.add(1, new com.avaya.sce.runtime.PhraseVariableElement("AudioURLs:A_negative",
				com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL, false));
		
		p.add(1, new com.avaya.sce.runtime.PhraseVariableElement("AudioURLs:B_positive",
				com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL, false));
		
		p.add(1, new com.avaya.sce.runtime.PhraseVariableElement("AudioURLs:B_negative",
				com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL, false));
		
		p.add(1, new com.avaya.sce.runtime.PhraseVariableElement("AudioURLs:O_positive",
				com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL, false));
		
		p.add(1, new com.avaya.sce.runtime.PhraseVariableElement("AudioURLs:O_negative",
				com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL, false));

		prompts.add(p);

	}
	
	
	@Override
	public void updateChoices(Collection choices, SCESession mySession) {
		super.updateChoices(choices, mySession);

		com.avaya.sce.runtime.Choice choice = null;
		java.util.Collection grammarInfo = null;
		grammarInfo = new java.util.ArrayList();

		ApiIntegration api = new ApiIntegration(mySession);
		
		try {
			
			for (int i = 0; i < bloodGrouplist.size(); i++) {

				String bloodgroup = bloodGrouplist.get(i);
				String dtmf = String.valueOf((i + 1));
				System.out.println("bloodgroup: "+bloodgroup);
				System.out.println("dtmf: "+dtmf);
				choice = new com.avaya.sce.runtime.Choice(bloodgroup, dtmf, true, "exact", "GetBloodUnits-AvailableBranches", grammarInfo, true);
				choices.add(choice);

			}
			
		} catch (Exception e) {
			System.out.println("Exception in Update choice : " + e.getLocalizedMessage());
			e.printStackTrace();
		}

	}
}
